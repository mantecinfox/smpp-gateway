version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: smpp-postgres
    environment:
      POSTGRES_DB: smpp_admin
      POSTGRES_USER: smpp_user
      POSTGRES_PASSWORD: smpp_password_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - smpp-network
    restart: unless-stopped

  # Redis para cache
  redis:
    image: redis:7-alpine
    container_name: smpp-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - smpp-network
    restart: unless-stopped

  # Aplicação principal
  app:
    build: .
    container_name: smpp-app
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=smpp_admin
      - DB_USER=smpp_user
      - DB_PASSWORD=smpp_password_2024
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SMPP_HOST=198.54.166.74
      - SMPP_PORT=2875
      - SMPP_SYSTEM_ID=WhatsInfo_otp
      - SMPP_PASSWORD=juebkiur
      - API_PORT=3000
      - JWT_SECRET=smpp_admin_jwt_secret_2024
      - WEBHOOK_SECRET=smpp_webhook_secret_2024
    ports:
      - "3000:3000"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - smpp-network
    restart: unless-stopped

  # Nginx como proxy reverso
  nginx:
    image: nginx:alpine
    container_name: smpp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - smpp-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  smpp-network:
    driver: bridge